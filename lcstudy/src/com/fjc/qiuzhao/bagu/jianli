1. HTTP和HTTPS的区别

Http是超文本传输协议，其中信息是明文传输的；Https是Http协议加上SSL，具有安全性；
Http不验证通信方的身份，通信方的身份可能遭到伪装；Https需要CA申请证书；
Http和Https使用不一样的连接方式，端口也不一样，前者是80，后者是443；
Http无法证明报文的完整性，报文可能被篡改；
Http连接是无状态的，Https是SSL+Http协议构建的可进行加密传输，身份认证的网络协议；
Https连接缓存不如Http高效，流量成本高

2. 类加载机制
虚拟机把描述类的数据从Class文件加载到内存，对数据进行校验、转换解析和初始化，最终形成可以被虚拟机直接使用的Java类型。
类从加载到虚拟机内存开始，到卸载出内存为止，整个生命周期包括:加载、验证、准备、解析、初始化、使用、卸载7个阶段。其中验证、准备、解析3个部分统称为连接。

类加载器有
启动类加载器，扩展类加载器，应用程序类加载器，其他类加载器。

双亲委派工作过程
一个类加载器收到了类加载请求，首先不会自己尝试加载这个类，而是把这个请求委派交给父类加载器去完成。
每一个层次的类加载器都是如此，因此所有的加载请求最终都会传送到顶层的启动类加载器中，只有当父类加载器反馈自己无法完成这个加载请求，子加载器才会尝试自己去加载。
实现双亲委派的代码主要集中在java.lang.ClassLoader的loadClass()方法，先检查是否已经被加载过，如果没有加载则调用父加载器的loadClass()方法，若父加载器
为空则使用启动类加载器作为父类加载器，如果父类加载失败抛出ClassNotFoundException异常后，再调用自己的findClass()方法加载。

实现自定义加载器，只需要继承java.lang.ClassLoader类，并重写findClass()方法。

打破双亲委派
(1) 自己写一个类加载器
(2) 重写loadClass()
(3) 重写findClass()

3. 垃圾回收算法
(1) 标记-清除算法(Mark-sweep)
(2) 复制算法(Copying)
(3) 标记-整理算法(Mark-compact)
(4) 分代收集算法 使用分代收集算法是因为不同对象的生命周期不一样。年轻代主要是复制算法;年老代是标记整理算法。

常用的垃圾收集器
(1) Serial收集器(复制算法)
(2) Serial Old收集器(标记-整理算法)
(3) ParNew收集器(停止-复制算法)
(4) Parallel Scavenge收集器(停止-复制算法)
(5) Parallel Old收集器(停止-复制算法)
(7) CMS收集器(标记-清除)
(7) G1收集器

CMS垃圾收集器ConCurrent Mark-Sweep，以牺牲吞吐量为代价来获得回收停顿时间的垃圾回收器，使用标记-清除算法完成的，有四步
初始标记；并发标记；重新标记；并发清除
CMS优缺点    优点：并发收集，低停顿;    缺点：对CPU资源敏感，无法处理浮动垃圾，会有大量的空间碎片产生

G1垃圾收集器





5. 输入url地址的过程
DNS解析，将域名解析成对应的IP地址 -> 
TCP连接，与服务器进行三次握手，建立TCP连接 ->
向服务器发送HTTP请求 ->
服务器处理请求，返回HTTP响应 ->
浏览器解析并渲染页面 ->
断开连接，TCP四次挥手，连接结束

6. DNS解析过程
检查浏览器缓存，如果能找到对应的IP，直接结束过程，没有找到->
检查本地DNS服务器是否缓存对应域名和IP，如果有直接结束，没有找到 ->  
请求根服务器，返回顶级域名服务器 ->
请求顶级域名服务器，返回权威域名服务器 ->
请求权威域名服务器，返回对应的ip地址 ->
整个DNS解析过程结束。

7. TCP保证可靠传输
数据包校验：检测数据在传输过程中的变化
对失序数据包重排序
丢弃重复数据
应答机制：TCP收到另一端的数据，将发送一个确认，不是立即发送，通常推迟几分之一秒
超时重发
流量控制：可变大小的滑动窗口协议

8. TCP和UDP
TCP是面向连接的，UDP是无连接的，发送数据不需要建立连接
TCP提供可靠服务，通过TCP连接传送的数据，无差错不丢失不重复，且按序到达，UDP尽最大努力交付，即不保证可靠交付
TCP面向字节流，UDP是面向报文的，没有拥塞控制
TCP连接是点到点的，UDP支持一对一，一对多，多对多
TCP首部开销20字节，UDP首部开销8字节
TCP的逻辑通信信道是全双工的可靠信道，UDP是不可靠信道
UDP场景：QQ语音，QQ视频，直播；TCP场景：文件传输，发送和接收邮件，远程登录

9. HTTP常见的状态码






















